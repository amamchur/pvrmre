[HEADER]
	VERSION		00.00.00.00
	DESCRIPTION Basic Lighting
	COPYRIGHT	Imagination Technologies Ltd.
[/HEADER]

[TEXTURES]
	FILE WoodTexture 	textures/generics_epoca_senza.pvr		LINEAR-LINEAR-NONE
	FILE ClothTexture 	textures/st263.pvr						LINEAR-LINEAR-NONE
[/TEXTURES]

[VERTEXSHADER]
	NAME VertShader
	
	[GLSL_CODE]
	attribute highp		vec3	inVertex;
	attribute highp		vec3	inNormal;
	attribute highp 	vec2 	inTexCoord;

	uniform highp		mat4 	WorldViewProjection;
	uniform highp		mat4  	World;
	uniform mediump		mat4	UnpackMatrix;
	uniform mediump		vec3 	LightDir;
	uniform mediump		vec3  	EyePos;

	uniform lowp		vec3 	AmbientMat;
	uniform lowp		vec3 	DiffuseMat;
	uniform lowp		vec3 	SpecMat;
	uniform lowp		float 	SpecPow;

	varying lowp 	vec3 vDiff;
	varying lowp 	vec3 vAmb;
	varying lowp 	vec3 vSpec;
	varying highp 	vec2 vTexCoord;

	void main(void)
	{
		mediump vec3 lightVec = -normalize(LightDir);
		mediump vec3 normal = normalize((World * vec4(inNormal, 0.0)).xyz);
		highp vec4 position = UnpackMatrix * vec4(inVertex, 1.0);
		
		gl_Position = WorldViewProjection * position;
			
		mediump vec3 EyeVec = normalize(EyePos - position.xyz);		
		highp float NDotL = max(dot(normal, lightVec), 0.0);
			
		mediump vec3 vHalfVec = normalize(lightVec + EyeVec);
		mediump float HDotN = max(0.0, dot(vHalfVec, normal));
		mediump float fSpecPow 	= SpecPow * 100.0; // 0.0 - 1.0 expand
		vDiff = DiffuseMat * NDotL;
		vSpec = SpecMat * pow(HDotN, fSpecPow);
		vAmb = AmbientMat;
		vTexCoord = inTexCoord;		
	}
	[/GLSL_CODE]
[/VERTEXSHADER]

[FRAGMENTSHADER]
	NAME ClothFragShader

	[GLSL_CODE]
	uniform sampler2D sTexture;
	
	varying lowp 	vec3 vDiff;
	varying lowp 	vec3 vAmb;
	varying lowp 	vec3 vSpec;
	varying highp 	vec2 vTexCoord;
	void main()
	{    		
		lowp vec3 TexCol = texture2D(sTexture, vTexCoord).xyz;
 		const highp vec3 LightColor = vec3(1.0, 1.0, 0.7);
		gl_FragColor = vec4(TexCol * max(vDiff, 0.95) + LightColor * vSpec, 1.0);
	}
	[/GLSL_CODE]
[/FRAGMENTSHADER]

[FRAGMENTSHADER]
	NAME WoodFragShader

	[GLSL_CODE]
	uniform sampler2D sTexture;
	
	varying lowp 	vec3 vDiff;
	varying lowp 	vec3 vAmb;
	varying lowp 	vec3 vSpec;
	varying highp 	vec2 vTexCoord;
	void main()
	{    		
		lowp vec3 TexCol = texture2D(sTexture, vTexCoord).xyz;
		gl_FragColor = vec4(TexCol * max(vDiff, 0.7) + vSpec, 1.0);
	}
	[/GLSL_CODE]
[/FRAGMENTSHADER]

[EFFECT] 
	NAME    ClothEffect

	ATTRIBUTE inVertex				POSITION
	ATTRIBUTE inNormal				NORMAL
	ATTRIBUTE inTexCoord			UV0

	UNIFORM WorldViewProjection		WORLDVIEWPROJECTION
	UNIFORM World					WORLD
	UNIFORM LightDir				LIGHTDIRWORLD0
	UNIFORM UnpackMatrix			UNPACKMATRIX
	UNIFORM	EyePos					EYEPOSWORLD

	UNIFORM AmbientMat				MATERIALCOLORAMBIENT
	UNIFORM DiffuseMat				MATERIALCOLORDIFFUSE
	UNIFORM SpecMat					MATERIALCOLORSPECULAR
	UNIFORM SpecPow					MATERIALSHININESS

	UNIFORM	sTexture				TEXTURE0
	TEXTURE 0 ClothTexture
	
	FRAGMENTSHADER  ClothFragShader
	VERTEXSHADER    VertShader
[/EFFECT]

[EFFECT] 
	NAME    SkinEffect

	ATTRIBUTE inVertex				POSITION
	ATTRIBUTE inNormal				NORMAL
	ATTRIBUTE inTexCoord			UV0

	UNIFORM WorldViewProjection		WORLDVIEWPROJECTION
	UNIFORM World					WORLD
	UNIFORM LightDir				LIGHTDIRWORLD0
	UNIFORM UnpackMatrix			UNPACKMATRIX
	UNIFORM	EyePos					EYEPOSWORLD

	UNIFORM AmbientMat				MATERIALCOLORAMBIENT
	UNIFORM DiffuseMat				MATERIALCOLORDIFFUSE
	UNIFORM SpecMat					MATERIALCOLORSPECULAR
	UNIFORM SpecPow					MATERIALSHININESS

	UNIFORM	sTexture				TEXTURE0
	TEXTURE 0 ClothTexture
	
	FRAGMENTSHADER  ClothFragShader
	VERTEXSHADER    VertShader
[/EFFECT]

[EFFECT] 
	NAME    WoodEffect

	ATTRIBUTE inVertex				POSITION
	ATTRIBUTE inNormal				NORMAL
	ATTRIBUTE inTexCoord			UV0

	UNIFORM WorldViewProjection		WORLDVIEWPROJECTION
	UNIFORM World					WORLD
	UNIFORM LightDir				LIGHTDIRWORLD0
	UNIFORM UnpackMatrix			UNPACKMATRIX
	UNIFORM	EyePos					EYEPOSWORLD

	UNIFORM AmbientMat				MATERIALCOLORAMBIENT
	UNIFORM DiffuseMat				MATERIALCOLORDIFFUSE
	UNIFORM SpecMat					MATERIALCOLORSPECULAR
	UNIFORM SpecPow					MATERIALSHININESS

	UNIFORM	sTexture				TEXTURE0
	TEXTURE 0 WoodTexture
	
	FRAGMENTSHADER  WoodFragShader
	VERTEXSHADER    VertShader
[/EFFECT]
