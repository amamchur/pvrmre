[HEADER]
	VERSION		00.00.00.00
	DESCRIPTION Fast Transformation and Lighting Example
	COPYRIGHT	Imagination Technologies Ltd.
[/HEADER]

[TEXTURES]
	FILE base 	textures/generics_epoca_senza.pvr		LINEAR-LINEAR-NONE
[/TEXTURES]

[VERTEXSHADER]
	NAME VertShader
	[GLSL_CODE]
		attribute highp   vec3  inVertex;
		attribute mediump vec3  inNormal;
		attribute mediump vec2  inTexCoord;
		
		uniform highp   mat4  MVPMatrix;
		uniform mediump vec3  LightPos;
		
		varying lowp    float  DiffuseIntensity;
		varying lowp    float  SpecularIntensity;
		varying mediump vec2   TexCoord;
		
		void main()
		{
			gl_Position = MVPMatrix * vec4(inVertex, 1.0);
			
			mediump vec3 LightDirection = normalize(LightPos - inVertex);
			DiffuseIntensity = dot(inNormal, LightDirection);
			SpecularIntensity = max((DiffuseIntensity - 0.99) * 2.0, 0.0);
			
			TexCoord = inTexCoord;
		}
	[/GLSL_CODE]
[/VERTEXSHADER]

[FRAGMENTSHADER]
	NAME FragShader
	[GLSL_CODE]
		uniform sampler2D sTexture;
		
		varying lowp    float  DiffuseIntensity;
		varying lowp    float  SpecularIntensity;
		varying mediump vec2   TexCoord;
		
		void main()	
		{
			lowp vec3 texColor  = vec3 (texture2D(sTexture, TexCoord));
			lowp vec3 color = (texColor * DiffuseIntensity) + SpecularIntensity;
			gl_FragColor = vec4(color, 1.0);
		}
	[/GLSL_CODE]
[/FRAGMENTSHADER]

[EFFECT]
	NAME FastTnL

	ATTRIBUTE	inVertex			POSITION
	ATTRIBUTE	inNormal			NORMAL
	ATTRIBUTE	inTexCoord			UV
	UNIFORM		MVPMatrix			WORLDVIEWPROJECTION
	UNIFORM		LightPos 			LIGHTPOSMODEL0
	UNIFORM		sTexture			TEXTURE0

	TEXTURE 0 base

	VERTEXSHADER   VertShader
	FRAGMENTSHADER FragShader
[/EFFECT]